{"version":3,"file":"component---src-templates-blog-list-template-js-26b1e2b79c96c0d863bc.js","mappings":"iJAiCA,IA7BoBA,IAAqC,IAApC,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAASJ,EACjD,OACEK,EAAAA,cAAA,OAAKC,UAAU,sCACbD,EAAAA,cAAA,OAAKC,UAAU,uDACbD,EAAAA,cAAA,OAAKC,UAAU,yCACbD,EAAAA,cAAA,MAAIC,UAAU,iBACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,GAAIN,EAAMI,UAAU,kBACvBL,IAGLI,EAAAA,cAAA,OAAKC,UAAU,qBACZH,GAEHE,EAAAA,cAAA,OAAKC,UAAU,cACZF,KAIH,C,gECSV,UAxBiBJ,IAA4C,IAA3C,KAAES,EAAI,SAAEC,GAA6BV,EACrD,MAAMW,EAAQF,EAAKG,YAAYC,MAK/B,OACER,EAAAA,cAACS,EAAAA,EAAM,CAACJ,SAAUA,EAAUK,UAAU,OAAOC,gBAAgB,uBAC3DX,EAAAA,cAAA,WAASC,UAAU,iDACjBD,EAAAA,cAAA,WAASC,UAAU,wCAChBK,EAAMM,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMjB,EAAQkB,EAAKC,SAASnB,OAASkB,EAAKE,OAAOnB,KACjD,OACEG,EAAAA,cAACiB,EAAAA,EAAW,CAACC,IAAKJ,EAAKE,OAAOnB,KAAMD,MAAOA,EAAOC,KAAMiB,EAAKE,OAAOnB,KAClEC,KAAMgB,EAAKK,eAAerB,KAAMC,QAASe,EAAKK,eAAepB,SAAW,MAM3E,C","sources":["webpack://kenfinnigan-blog/./src/components/blog-summary.js","webpack://kenfinnigan-blog/./src/templates/blog-list-template.js"],"sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst BlogSummary = ({ title, slug, date, summary }) => {\n  return (\n    <div className=\"relative w-100 w-30-l mb4 bg-white\">\n      <div className=\"relative w-100 mb4 bg-white nested-copy-line-height\">\n        <div className=\"bg-white mb3 pa4 gray overflow-hidden\">\n          <h1 className=\"f3 near-black\">\n            <Link to={slug} className=\"link black dim\">\n              {title}\n            </Link>\n          </h1>\n          <div className=\"f6 lh-copy db pb2\">\n            {date}\n          </div>\n          <div className=\"f5 lh-copy\">\n            {summary}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nBlogSummary.propTypes = {\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n}\n\nexport default BlogSummary\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport BlogSummary from \"../components/blog-summary\"\n\nconst BlogList = ({ data, location /*, pageContext */ }) => {\n  const posts = data.allAsciidoc.edges\n//  const { currentPage, numPages } = pageContext\n//  const isFirst = currentPage === 1\n//  const isLast = currentPage === numPages\n\n  return (\n    <Layout location={location} pageTitle=\"Blog\" pageDescription=\"musings for sharing\">\n      <article className=\"pa3 pa4-ns nested-copy-line-height nested-img\">\n        <section className=\"flex-ns flex-wrap justify-around mt5\">\n          {posts.map(({ node }) => {\n            const title = node.document.title || node.fields.slug\n            return (\n              <BlogSummary key={node.fields.slug} title={title} slug={node.fields.slug}\n                date={node.pageAttributes.date} summary={node.pageAttributes.summary} />\n            )\n          })}\n        </section>\n        {/* TODO Page buttons _internal/pagination.html */}\n      </article>\n    </Layout>\n  );\n}\n\nexport default BlogList\n\nBlogList.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object,\n  pageContext: PropTypes.object,\n}\n\nexport const blogListQuery = graphql`query blogListQuery($skip: Int!, $limit: Int!) {\n  allAsciidoc(\n    filter: {fields: {blog: {eq: true}}}\n    sort: {pageAttributes: {date: DESC}}\n    limit: $limit\n    skip: $skip\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        document {\n          title\n        }\n        pageAttributes {\n          date(formatString: \"MMMM DD, YYYY\")\n          summary\n        }\n      }\n    }\n  }\n}`\n"],"names":["_ref","title","slug","date","summary","React","className","Link","to","data","location","posts","allAsciidoc","edges","Layout","pageTitle","pageDescription","map","_ref2","node","document","fields","BlogSummary","key","pageAttributes"],"sourceRoot":""}